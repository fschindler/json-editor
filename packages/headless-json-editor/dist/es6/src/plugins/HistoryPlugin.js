const UPDATES_TO_COLLECT=12;export const historyPluginId="history";function isSameNodeUpdated(t,e){if(null==t||1!==t.changes.length||1!==e.length)return!1;const o=t.changes[0],n=e[0];return"update"===o.type&&"update"===n.type&&(o.node.pointer===n.node.pointer&&("string"===o.node.type||"number"===o.node.type))}export function HistoryPlugin(t){const e=[{root:t.getState(),changes:[],updateCount:0}],o=[];function n(){return e[e.length-1]}return{id:"history",onEvent(t,r){const s=n();if("done"===r.type&&t!==(null==s?void 0:s.root)){const u=r.changes;e.length>0&&isSameNodeUpdated(n(),u)&&s.updateCount<=12?(s.root=t,s.changes=r.changes,s.updateCount++):e.push({root:t,changes:u,updateCount:0}),o.length=0}},undo(){if(e.length>1){const r=e.pop();o.unshift(r);const s=n();t.setState(s.root,[{type:"undo",previous:r.root,next:s.root}])}},redo(){if(o.length>0){const r=n(),s=o.shift();e.push(s),t.setState(s.root,[{type:"redo",previous:r.root,next:s.root}])}},getUndoCount:()=>e.length-1,getRedoCount:()=>o.length}}