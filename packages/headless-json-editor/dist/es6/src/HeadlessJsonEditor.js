import{JsonEditor}from"json-schema-library";import{create}from"./node/create";import{json}from"./node/json";import{get}from"./node/get";import{errors}from"./node/errors";import{set}from"./transform/set";import{unlinkAll}from"./transform/unlinkAll";import{flat}from"./node/flat";import{remove as removeTarget}from"./transform/remove";import{move as moveItem}from"./transform/move";import{updateErrors}from"./validate/updateErrors";import{isJSONError}from"./types";import{splitLastProperty}from"./splitLastProperty";import{deepEqual}from"fast-equals";function getRootChange(t){var s;let e=(null===(s=t[0])||void 0===s?void 0:s.node.pointer)||"#";return t.forEach((({node:t})=>{e.includes(t.pointer)&&(e=t.pointer)})),e}function runPlugins(t,s,e,r){r.forEach((s=>{t.forEach((t=>{const i=t.onEvent(e,s);i&&(e=i[0],r.push(...i[1]))}))}));const i={type:"done",previous:s,next:e,changes:r};return t.forEach((t=>t.onEvent(e,i))),e}export class HeadlessJsonEditor{constructor(t){this.changes=[],this.plugins=[];const{schema:s,data:e={},plugins:r=[],draftConfig:i}=t;this.options=t,this.draft=new JsonEditor(s,i),this.state=create(this.draft,this.draft.getTemplate(e)),r.map((t=>this.addPlugin(t))),setTimeout((()=>t.validate&&this.validate()))}setData(t){const{draft:s}=this,e=this.state;this.state=create(s,s.getTemplate(t)),!0===this.options.validate&&this.validate();const r=flat(this.state).map((t=>({type:"create",node:t})));return this.state=runPlugins(this.plugins,e,this.state,r),this.state}setSchema(t){return this.draft.setSchema(t),this.setData(json(this.state))}validate(){if(null==this.state)return;const t=unlinkAll(this.state);updateErrors(this.draft,t);const s=errors(this.state);this.state=runPlugins(this.plugins,this.state,t,[{type:"validation",previous:this.state,next:t,errors:s}])}setState(t,s){return this.state=runPlugins(this.plugins,this.state,t,s),this.state}getState(){return this.state}getNode(t){return t&&"string"==typeof t&&""!==t.replace(/^[/#]+/,"")?get(this.state,t):this.state}plugin(t){return this.plugins.find((s=>s.id===t))}addPlugin(t){const s=t(this,this.options);s&&s.id&&this.plugins.push(s)}setValue(t,s){const e=get(this.state,t);if(!isJSONError(e)){const t=json(e);if(deepEqual(t,s))return this.state}const[r,i]=set(this.draft,this.state,t,s);if(isJSONError(r))return console.error(`error setting '${t}' = ${s}`),console.log(r),this.state;if(void 0===i)throw new Error("invalid state");return updateErrors(this.draft,r,getRootChange(i)),this.changes.push(...i),this.state=runPlugins(this.plugins,this.state,r,i),this.state}removeValue(t){const[s,e]=removeTarget(this.state,t);if(isJSONError(s))return console.error(`error removing '${t}'`),console.log(s),this.state;if(void 0===e)throw new Error("invalid state");const[r]=splitLastProperty(t);return updateErrors(this.draft,s,r),this.changes.push(...e),this.state=runPlugins(this.plugins,this.state,s,e),this.state}moveItem(t,s){const[e,r]=splitLastProperty(t);console.log("move",e,r,s);const[i,o]=moveItem(this.draft,this.state,e,parseInt(r),s);if(console.log(o,i),isJSONError(i))return console.error(`error moving nodes in '${t}'`),console.log(i),this.state;if(void 0===o)throw new Error("invalid state");return updateErrors(this.draft,i,t),this.changes.push(...o),this.state=runPlugins(this.plugins,this.state,i,o),this.state}appendItem(t,s){const e=this.draft.getTemplate(null,s),r=`${t.pointer}/${t.children.length}`,[i,o]=set(this.draft,this.state,r,e);if(isJSONError(i))return console.error(`error apending item from schema '${t.pointer}'`),console.log(i),this.state;if(void 0===o)throw new Error("invalid state");updateErrors(this.draft,i,t.pointer);let n=runPlugins(this.plugins,this.state,i,o);return isJSONError(n)&&(console.error(`error from state returned by plugins '${t.pointer}'`),console.log(n),n=i),this.state=n,this.state}getArrayAddOptions(t){const s=this.draft.getSchema(t.pointer,json(this.state));return this.draft.getChildSchemaSelection(t.children.length,s)}getTemplateData(t){return this.draft.getTemplate(null,t)}}