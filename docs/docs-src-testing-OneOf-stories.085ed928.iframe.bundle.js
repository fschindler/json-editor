"use strict";(self.webpackChunkjson_editor=self.webpackChunkjson_editor||[]).push([[8256],{"./packages/docs/src/testing/OneOf.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{InvalidData:()=>InvalidData,InvalidNumber:()=>InvalidNumber,InvalidString:()=>InvalidString,OneOfType:()=>OneOfType,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_sagold_react_json_editor__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./packages/react-json-editor/src/index.ts")),_sagold_rje_widgets__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/rje-widgets/src/index.ts"),_rje_widgets_src_lib_components_theme_Theme__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/rje-widgets/src/lib/components/theme/Theme.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Testing/OneOf",component:function Form({data,schema}){const[node,editor]=(0,_sagold_react_json_editor__WEBPACK_IMPORTED_MODULE_2__.jE)({data,schema,widgets:_sagold_rje_widgets__WEBPACK_IMPORTED_MODULE_3__.DA,plugins:[],onChange:console.log}),WidgetComponent=editor.getWidget(node);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_rje_widgets_src_lib_components_theme_Theme__WEBPACK_IMPORTED_MODULE_4__.Q,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"rje-form",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WidgetComponent,{node,editor})})})}};const InvalidData={args:{data:123,schema:{type:"object",oneOf:[{type:"object",title:"object with number",required:["number"],properties:{number:{title:"number",type:"number"}}},{type:"object",title:"object with title",required:["title"],properties:{title:{title:"string",type:"string"}}}]}}},InvalidNumber={args:{data:{number:"abc"},schema:{type:"object",oneOf:[{type:"object",title:"object with number",required:["number"],properties:{number:{title:"number",type:"number"}}},{type:"object",title:"object with title",required:["title"],properties:{title:{title:"string",type:"string"}}}]}}},InvalidString={args:{data:{title:123},schema:{type:"object",oneOf:[{type:"object",title:"object with number",required:["number"],properties:{number:{title:"number",type:"number"}}},{type:"object",title:"object with title",required:["title"],properties:{title:{title:"title",type:"string"}}}]}}},OneOfType={args:{data:{},schema:{type:"object",required:["typeSelection"],properties:{typeSelection:{type:"object",title:"OneOf Selection",description:"Type selection using oneOf schema",options:{header:{color:"black"}},oneOfProperty:"type",oneOf:[{type:"object",title:"Schema Type One",required:["type","property"],properties:{type:{type:"string",const:"first"},property:{type:"number",title:"A number for option one",default:1}}},{type:"object",title:"Schema Type Two",required:["type","property"],properties:{type:{type:"string",const:"second"},property:{type:"string",title:"Schema two property",default:"a string"}}}]}}}}},__namedExportsOrder=["InvalidData","InvalidNumber","InvalidString","OneOfType"];InvalidData.parameters={...InvalidData.parameters,docs:{...InvalidData.parameters?.docs,source:{originalSource:"{\n  args: {\n    data: 123,\n    schema: {\n      type: 'object',\n      oneOf: [{\n        type: 'object',\n        title: 'object with number',\n        required: ['number'],\n        properties: {\n          number: {\n            title: 'number',\n            type: 'number'\n          }\n        }\n      }, {\n        type: 'object',\n        title: 'object with title',\n        required: ['title'],\n        properties: {\n          title: {\n            title: 'string',\n            type: 'string'\n          }\n        }\n      }]\n    }\n  }\n}",...InvalidData.parameters?.docs?.source}}},InvalidNumber.parameters={...InvalidNumber.parameters,docs:{...InvalidNumber.parameters?.docs,source:{originalSource:"{\n  args: {\n    data: {\n      number: 'abc'\n    },\n    schema: {\n      type: 'object',\n      oneOf: [{\n        type: 'object',\n        title: 'object with number',\n        required: ['number'],\n        properties: {\n          number: {\n            title: 'number',\n            type: 'number'\n          }\n        }\n      }, {\n        type: 'object',\n        title: 'object with title',\n        required: ['title'],\n        properties: {\n          title: {\n            title: 'string',\n            type: 'string'\n          }\n        }\n      }]\n    }\n  }\n}",...InvalidNumber.parameters?.docs?.source}}},InvalidString.parameters={...InvalidString.parameters,docs:{...InvalidString.parameters?.docs,source:{originalSource:"{\n  args: {\n    data: {\n      title: 123\n    },\n    schema: {\n      type: 'object',\n      oneOf: [{\n        type: 'object',\n        title: 'object with number',\n        required: ['number'],\n        properties: {\n          number: {\n            title: 'number',\n            type: 'number'\n          }\n        }\n      }, {\n        type: 'object',\n        title: 'object with title',\n        required: ['title'],\n        properties: {\n          title: {\n            title: 'title',\n            type: 'string'\n          }\n        }\n      }]\n    }\n  }\n}",...InvalidString.parameters?.docs?.source}}},OneOfType.parameters={...OneOfType.parameters,docs:{...OneOfType.parameters?.docs,source:{originalSource:"{\n  args: {\n    data: {},\n    schema: {\n      type: 'object',\n      required: ['typeSelection'],\n      properties: {\n        typeSelection: {\n          type: 'object',\n          title: 'OneOf Selection',\n          description: 'Type selection using oneOf schema',\n          options: {\n            header: {\n              color: 'black'\n            }\n          },\n          oneOfProperty: 'type',\n          oneOf: [{\n            type: 'object',\n            title: 'Schema Type One',\n            required: ['type', 'property'],\n            properties: {\n              type: {\n                type: 'string',\n                const: 'first'\n              },\n              property: {\n                type: 'number',\n                title: 'A number for option one',\n                default: 1\n              }\n            }\n          }, {\n            type: 'object',\n            title: 'Schema Type Two',\n            required: ['type', 'property'],\n            properties: {\n              type: {\n                type: 'string',\n                const: 'second'\n              },\n              property: {\n                type: 'string',\n                title: 'Schema two property',\n                default: 'a string'\n              }\n            }\n          }]\n        }\n      }\n    }\n  }\n}",...OneOfType.parameters?.docs?.source}}}}}]);