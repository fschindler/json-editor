import{isJSONError}from"../types";import gp from"gson-pointer";import{invalidPathError}from"../errors";import{updatePath}from"./updatePath";import{unlinkPath}from"./unlinkPath";export function move(r,t,e,n,i){const o=unlinkPath(t,e);if(isJSONError(o))return[o];const[a,p]=o;if("array"!==p.type)return[invalidPathError({pointer:e,reason:`expected pointer to array, received ${p.type}`,where:"retrieving array in transform.insert"})];i=Math.min(i,p.children.length-1),n=Math.min(n,p.children.length-1);const h=[...p.children];h.splice(i,0,h.splice(n,1)[0]),p.children=h;const m=[],s=Math.min(n,i),l=Math.max(n,i);for(let r=s;r<=l;r+=1)h[r]=updatePath(h[r],gp.join(e),`${r}`),m.push({type:"update",node:h[r]});return[a,m]}