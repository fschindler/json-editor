import{isJSONError,isNode}from"../../types";import{create}from"../../node/create";import{getChildNodeIndex}from"../../node/getChildNode";import{deepEqual}from"fast-equals";import{getSchemaOfChild}from"./getSchemaOfChild";export function updateValueNode(e,r,t,o){const d=getChildNodeIndex(r,t.property),p=[];if(typeof t.value==typeof o)return t.value=o,p.push({type:"update",node:t}),p;const i=getSchemaOfChild(e,r,t.property,o);if(isJSONError(i))return i;if(deepEqual(i,t.schema))return t.value=o,p.push({type:"update",node:t}),p;const n=`${r.pointer}/${t.property}`;return isNode(r.children[d])&&p.push({type:"delete",node:r.children[d]}),r.children[d]=create(e,o,i,n),p.push({type:"create",node:r.children[d]}),p}