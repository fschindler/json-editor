"use strict";(self.webpackChunkjson_editor=self.webpackChunkjson_editor||[]).push([[7244],{"./packages/docs/src/ArrayItems.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AdditionalItemsFalse:()=>AdditionalItemsFalse,AdditionalItemsSchema:()=>AdditionalItemsSchema,AdditionalItemsTrue:()=>AdditionalItemsTrue,AdditionalItemsUndefined:()=>AdditionalItemsUndefined,Contains:()=>Contains,Enum:()=>Enum,IfThenElse:()=>IfThenElse,ItemsArray:()=>ItemsArray,ItemsObject:()=>ItemsObject,Length:()=>Length,LengthDefaultOverride:()=>LengthDefaultOverride,LengthTemplate:()=>LengthTemplate,Not:()=>Not,OneOf:()=>OneOf,UniqueItems:()=>UniqueItems,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={component:__webpack_require__("./packages/rje-widgets/src/index.ts").R_},ItemsArray={args:{theme:"light",validate:!0,data:["a title","a subtitle"],schema:{title:"items: [schema, schema]",type:"array",items:[{title:"Title",type:"string"},{title:"Subtitle",type:"string"}]}}},AdditionalItemsUndefined={args:{theme:"light",validate:!0,data:["a title","a subtitle"],schema:{title:"additionalItems: undefined",type:"array",items:[{title:"Title",type:"string"},{title:"Subtitle",type:"string"}]}}},AdditionalItemsTrue={args:{theme:"light",validate:!0,data:["a title","a subtitle","an additional item"],schema:{title:"additionalItems: true",type:"array",additionalItems:!0,items:[{title:"Title",type:"string"},{title:"Subtitle",type:"string"}]}}},AdditionalItemsFalse={args:{theme:"light",validate:!0,data:["a title","a subtitle","an additional item"],schema:{title:"additionalItems: false",type:"array",additionalItems:!1,items:[{title:"Title",type:"string"},{title:"Subtitle",type:"string"}]}}},AdditionalItemsSchema={args:{theme:"light",validate:!0,data:["a title","a subtitle","an additional item"],schema:{title:'additionalItems: { type: "number" }',type:"array",additionalItems:{title:"Additional number",type:"number"},items:[{title:"Title",type:"string"},{title:"Subtitle",type:"string"}]}}},ItemsObject={args:{theme:"light",validate:!0,addOptionalProps:!1,data:[2023],schema:{title:"items: { object }",type:"array",items:{type:"object",required:["alt","image"],title:"Content image",properties:{alt:{title:"Image alt text",type:"string"},image:{title:"Image",type:"string",format:"file"},width:{title:"Width in px",type:"number",default:400}}}}}},OneOf={args:{theme:"light",validate:!0,addOptionalProps:!1,data:[{type:"header"}],schema:{title:"items: { oneOf: [ schema, schema ] }",type:"array",items:{oneOfProperty:"type",oneOf:[{id:"header",title:"header",type:"object",required:["type","text"],properties:{type:{type:"string",const:"header",options:{hidden:!0}},text:{title:"Header text",type:"string"}}},{id:"paragraph",title:"paragraph",type:"object",required:["type","text"],properties:{type:{type:"string",const:"paragraph",options:{hidden:!0}},text:{title:"Paragraph text",type:"string"}}}]},additionalItems:{title:"Width in px",type:"number",default:400}}}},Length={args:{theme:"light",validate:!0,addOptionalProps:!1,data:[2023],schema:{title:"minItems: 1, maxItems: 2",type:"array",minItems:1,maxItems:2,items:{title:"item",type:"number",default:1}}}},LengthTemplate={args:{theme:"light",validate:!0,addOptionalProps:!1,data:[],schema:{title:"minItems: 1 - empty data",type:"array",minItems:1,maxItems:2,items:{title:"option",type:"string",enum:["first","second","third"]}}}},LengthDefaultOverride={args:{theme:"light",validate:!0,addOptionalProps:!1,data:[],schema:{title:"minItems: 1 - empty data",type:"array",minItems:1,maxItems:2,default:[],items:{title:"option",type:"string",enum:["first","second","third"]}}}},IfThenElse={args:{theme:"light",validate:!0,addOptionalProps:!1,data:[],schema:{title:"if: { items: { maximum: 1 } }",type:"array",items:{title:"Item",type:"number",default:2},minItems:1,if:{items:{maximum:1}},then:{maxItems:1},else:{maxItems:0}}}},Enum={args:{theme:"light",validate:!0,addOptionalProps:!1,data:[],schema:{title:"enum: [[], []]",type:"array",enum:[[2019,10,22],[2023,1,1]],items:{type:"number"},minItems:3,maxItems:3,options:{title:!0}}}},Not={args:{theme:"light",validate:!0,addOptionalProps:!1,data:[123],schema:{title:"not: { items: { const: 123 }}",description:"value 123 is not allowed as array item",type:"array",not:{type:"array",items:{const:123}},items:{title:"item",type:"number",default:12}}}},UniqueItems={args:{theme:"light",validate:!0,addOptionalProps:!1,data:[1,2,2],schema:{title:"uniqueItems: true",type:"array",uniqueItems:!0,items:{title:"item",type:"number",default:1}}}},Contains={args:{theme:"light",validate:!0,addOptionalProps:!1,data:[2,3],schema:{title:"contains: { const: 1 }",type:"array",items:{title:"item",type:"number",default:1},contains:{type:"number",const:1}}}},__namedExportsOrder=["ItemsArray","AdditionalItemsUndefined","AdditionalItemsTrue","AdditionalItemsFalse","AdditionalItemsSchema","ItemsObject","OneOf","Length","LengthTemplate","LengthDefaultOverride","IfThenElse","Enum","Not","UniqueItems","Contains"];ItemsArray.parameters={...ItemsArray.parameters,docs:{...ItemsArray.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    data: ['a title', 'a subtitle'],\n    schema: {\n      title: 'items: [schema, schema]',\n      type: 'array',\n      items: [{\n        title: 'Title',\n        type: 'string'\n      }, {\n        title: 'Subtitle',\n        type: 'string'\n      }]\n    }\n  }\n}",...ItemsArray.parameters?.docs?.source}}},AdditionalItemsUndefined.parameters={...AdditionalItemsUndefined.parameters,docs:{...AdditionalItemsUndefined.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    data: ['a title', 'a subtitle'],\n    schema: {\n      title: 'additionalItems: undefined',\n      type: 'array',\n      items: [{\n        title: 'Title',\n        type: 'string'\n      }, {\n        title: 'Subtitle',\n        type: 'string'\n      }]\n    }\n  }\n}",...AdditionalItemsUndefined.parameters?.docs?.source}}},AdditionalItemsTrue.parameters={...AdditionalItemsTrue.parameters,docs:{...AdditionalItemsTrue.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    data: ['a title', 'a subtitle', 'an additional item'],\n    schema: {\n      title: 'additionalItems: true',\n      type: 'array',\n      additionalItems: true,\n      items: [{\n        title: 'Title',\n        type: 'string'\n      }, {\n        title: 'Subtitle',\n        type: 'string'\n      }]\n    } as JsonSchema\n  }\n}",...AdditionalItemsTrue.parameters?.docs?.source}}},AdditionalItemsFalse.parameters={...AdditionalItemsFalse.parameters,docs:{...AdditionalItemsFalse.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    data: ['a title', 'a subtitle', 'an additional item'],\n    schema: {\n      title: 'additionalItems: false',\n      type: 'array',\n      additionalItems: false,\n      items: [{\n        title: 'Title',\n        type: 'string'\n      }, {\n        title: 'Subtitle',\n        type: 'string'\n      }]\n    } as JsonSchema\n  }\n}",...AdditionalItemsFalse.parameters?.docs?.source}}},AdditionalItemsSchema.parameters={...AdditionalItemsSchema.parameters,docs:{...AdditionalItemsSchema.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    data: ['a title', 'a subtitle', 'an additional item'],\n    schema: {\n      title: 'additionalItems: { type: \"number\" }',\n      type: 'array',\n      additionalItems: {\n        title: 'Additional number',\n        type: 'number'\n      },\n      items: [{\n        title: 'Title',\n        type: 'string'\n      }, {\n        title: 'Subtitle',\n        type: 'string'\n      }]\n    }\n  }\n}",...AdditionalItemsSchema.parameters?.docs?.source}}},ItemsObject.parameters={...ItemsObject.parameters,docs:{...ItemsObject.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    addOptionalProps: false,\n    data: [2023],\n    schema: {\n      title: 'items: { object }',\n      type: 'array',\n      items: {\n        type: 'object',\n        required: ['alt', 'image'],\n        title: 'Content image',\n        properties: {\n          alt: {\n            title: 'Image alt text',\n            type: 'string'\n          },\n          image: {\n            title: 'Image',\n            type: 'string',\n            format: 'file'\n          },\n          width: {\n            title: 'Width in px',\n            type: 'number',\n            default: 400\n          }\n        }\n      }\n    }\n  } as JsonSchema\n}",...ItemsObject.parameters?.docs?.source}}},OneOf.parameters={...OneOf.parameters,docs:{...OneOf.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    addOptionalProps: false,\n    data: [{\n      type: 'header'\n    }],\n    schema: {\n      title: 'items: { oneOf: [ schema, schema ] }',\n      type: 'array',\n      items: {\n        oneOfProperty: 'type',\n        oneOf: [{\n          id: 'header',\n          title: 'header',\n          type: 'object',\n          required: ['type', 'text'],\n          properties: {\n            type: {\n              type: 'string',\n              const: 'header',\n              options: {\n                hidden: true\n              }\n            },\n            text: {\n              title: 'Header text',\n              type: 'string'\n            }\n          }\n        }, {\n          id: 'paragraph',\n          title: 'paragraph',\n          type: 'object',\n          required: ['type', 'text'],\n          properties: {\n            type: {\n              type: 'string',\n              const: 'paragraph',\n              options: {\n                hidden: true\n              }\n            },\n            text: {\n              title: 'Paragraph text',\n              type: 'string'\n            }\n          }\n        }]\n      },\n      additionalItems: {\n        title: 'Width in px',\n        type: 'number',\n        default: 400\n      }\n    }\n  } as JsonSchema\n}",...OneOf.parameters?.docs?.source}}},Length.parameters={...Length.parameters,docs:{...Length.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    addOptionalProps: false,\n    data: [2023],\n    schema: {\n      title: 'minItems: 1, maxItems: 2',\n      type: 'array',\n      minItems: 1,\n      maxItems: 2,\n      items: {\n        title: 'item',\n        type: 'number',\n        default: 1\n      }\n    }\n  }\n}",...Length.parameters?.docs?.source}}},LengthTemplate.parameters={...LengthTemplate.parameters,docs:{...LengthTemplate.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    addOptionalProps: false,\n    data: [],\n    schema: {\n      title: 'minItems: 1 - empty data',\n      type: 'array',\n      minItems: 1,\n      maxItems: 2,\n      items: {\n        title: 'option',\n        type: 'string',\n        enum: ['first', 'second', 'third']\n      }\n    }\n  }\n}",...LengthTemplate.parameters?.docs?.source}}},LengthDefaultOverride.parameters={...LengthDefaultOverride.parameters,docs:{...LengthDefaultOverride.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    addOptionalProps: false,\n    data: [],\n    schema: {\n      title: 'minItems: 1 - empty data',\n      type: 'array',\n      minItems: 1,\n      maxItems: 2,\n      default: [],\n      items: {\n        title: 'option',\n        type: 'string',\n        enum: ['first', 'second', 'third']\n      }\n    }\n  }\n}",...LengthDefaultOverride.parameters?.docs?.source}}},IfThenElse.parameters={...IfThenElse.parameters,docs:{...IfThenElse.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    addOptionalProps: false,\n    data: [],\n    schema: {\n      title: 'if: { items: { maximum: 1 } }',\n      type: 'array',\n      items: {\n        title: 'Item',\n        type: 'number',\n        default: 2\n      },\n      minItems: 1,\n      if: {\n        items: {\n          maximum: 1\n        }\n      },\n      then: {\n        maxItems: 1\n      },\n      else: {\n        maxItems: 0\n      }\n    }\n  }\n}",...IfThenElse.parameters?.docs?.source}}},Enum.parameters={...Enum.parameters,docs:{...Enum.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    addOptionalProps: false,\n    data: [],\n    schema: {\n      title: 'enum: [[], []]',\n      type: 'array',\n      enum: [[2019, 10, 22], [2023, 1, 1]],\n      items: {\n        type: 'number'\n      },\n      minItems: 3,\n      maxItems: 3,\n      options: {\n        title: true\n      }\n    }\n  }\n}",...Enum.parameters?.docs?.source}}},Not.parameters={...Not.parameters,docs:{...Not.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    addOptionalProps: false,\n    data: [123],\n    schema: {\n      title: 'not: { items: { const: 123 }}',\n      description: 'value 123 is not allowed as array item',\n      type: 'array',\n      not: {\n        type: 'array',\n        items: {\n          const: 123\n        }\n      },\n      items: {\n        title: 'item',\n        type: 'number',\n        default: 12\n      }\n    }\n  }\n}",...Not.parameters?.docs?.source}}},UniqueItems.parameters={...UniqueItems.parameters,docs:{...UniqueItems.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    addOptionalProps: false,\n    data: [1, 2, 2],\n    schema: {\n      title: 'uniqueItems: true',\n      type: 'array',\n      uniqueItems: true,\n      items: {\n        title: 'item',\n        type: 'number',\n        default: 1\n      }\n    }\n  }\n}",...UniqueItems.parameters?.docs?.source}}},Contains.parameters={...Contains.parameters,docs:{...Contains.parameters?.docs,source:{originalSource:"{\n  args: {\n    theme: 'light',\n    validate: true,\n    addOptionalProps: false,\n    data: [2, 3],\n    schema: {\n      title: 'contains: { const: 1 }',\n      type: 'array',\n      items: {\n        title: 'item',\n        type: 'number',\n        default: 1\n      },\n      contains: {\n        type: 'number',\n        const: 1\n      }\n    }\n  }\n}",...Contains.parameters?.docs?.source}}}}}]);