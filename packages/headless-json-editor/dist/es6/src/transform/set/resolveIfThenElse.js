import{create}from"../../node/create";import{json}from"../../node/json";import{set as setPointer}from"gson-pointer";const copy=e=>JSON.parse(JSON.stringify(e));export function resolveIfThenElse(e,t,n,r){if(!t.schema.if||!t.schema.then&&!t.schema.else)return[t,[]];const o=[],c={type:"object",...t.schema.then},s={type:"object",...t.schema.else},i=json(t),p=e.isValid(i,t.schema.if);let a=setPointer(copy(i),n,r);const h=e.isValid(a,t.schema.if);if(p===h)return[t,o];const l=h?c:s,m=create(e,i,p?c:s,t.pointer).children.map((e=>e.pointer));t.children=t.children.filter((e=>{const t=!m.includes(e.pointer);return!1===t&&o.push({type:"delete",node:e}),t})),a=e.getTemplate(a,l);const d=create(e,a,l,t.pointer).children;return o.push(...d.map((e=>({type:"create",node:e})))),t.children=t.children.concat(...d),[t,o]}