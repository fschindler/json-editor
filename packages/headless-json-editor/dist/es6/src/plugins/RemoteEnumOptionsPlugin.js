import{get,json,updateSchema,isJSONError}from"../index";export const RemoteEnumOptionsPlugin=(e,n)=>{const o={},t={};function r(e,n){const o=get(e,t[n.pointer]);if(isJSONError(o))return;const r=json(o).filter((e=>!(null==e||""===e))),[i,s]=updateSchema(e,n.pointer,{...n.schema,items:{...n.schema.items,enum:r}});return isJSONError(i)?void 0:[i,s]}return{id:"remoteEnumOptions",onEvent(e,n){if("create"===n.type&&n.node.options.syncEnum){const i=get(e,n.node.options.syncEnum.source);if(!isJSONError(i))return o[i.pointer]=n.node.pointer,t[n.node.pointer]=i.pointer,r(e,n.node)}if("update"===n.type){const i=n.node.pointer;if(t[n.node.pointer])return r(e,n.node);if(o[i]){const n=get(e,o[i]);if(!isJSONError(n))return r(e,n)}}}}};