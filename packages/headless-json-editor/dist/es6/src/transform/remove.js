import{isParentNode,isJSONError}from"../types";import{invalidPathError}from"../errors";import{getChildNodeIndex}from"../node/getChildNode";import{updatePath}from"./updatePath";import{split}from"gson-pointer";import{unlinkPath}from"./unlinkPath";export function remove(r,e){const t=split(e),o=t.pop(),i=unlinkPath(r,t);if(isJSONError(i))return[i];const[n,d]=i,a=getChildNodeIndex(d,o);if(!isParentNode(d))return[invalidPathError({pointer:e,reason:`path does not lead to valid destination in data/tree at ${d.pointer}`,where:`transform: 'remove' data at '${e}'`})];const l=[{type:"delete",node:d.children[a]}];if(d.children=[...d.children],d.children.splice(a,1),"array"===d.type)for(let r=a,e=d.children.length;r<e;r+=1)d.children[r]=updatePath(d.children[r],d.pointer,`${r}`);return[n,l]}