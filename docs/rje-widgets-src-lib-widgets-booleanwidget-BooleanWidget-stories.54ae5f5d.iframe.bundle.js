"use strict";(self.webpackChunkjson_editor=self.webpackChunkjson_editor||[]).push([[6242],{"./packages/rje-widgets/src/lib/widgets/booleanwidget/BooleanWidget.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_sagold_react_json_editor__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/react-json-editor/src/index.ts"),_index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/rje-widgets/src/lib/widgets/index.tsx"),_BooleanWidget__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/rje-widgets/src/lib/widgets/booleanwidget/BooleanWidget.tsx"),_components_theme_Theme__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/rje-widgets/src/lib/components/theme/Theme.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"packages/rje-widgets/BooleanWidget",argTypes:{data:{control:{type:"boolean"}},type:{options:["toggle","checkbox"],control:{type:"select"}},disabled:{control:{type:"boolean"}},readOnly:{control:{type:"boolean"}},required:{control:{type:"boolean"}}}},Default=(({data,schema,...options})=>{const[node,editor]=(0,_sagold_react_json_editor__WEBPACK_IMPORTED_MODULE_1__.jE)({schema,widgets:_index__WEBPACK_IMPORTED_MODULE_2__.D,data,validate:!0});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_theme_Theme__WEBPACK_IMPORTED_MODULE_4__.Q,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_BooleanWidget__WEBPACK_IMPORTED_MODULE_3__.H6,{node,editor,options})})}).bind({});Default.args={type:"toggle",data:!1,disabled:!1,readOnly:!1,required:!1,schema:{title:"Default boolean widget",type:"boolean",description:"options could go into storybook controls"}};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  data,\n  schema,\n  ...options\n}) => {\n  const [node, editor] = useEditor({\n    schema,\n    widgets,\n    data,\n    validate: true\n  });\n  return <Theme>\n      <BooleanWidget node={node} editor={editor} options={options} />\n    </Theme>;\n}",...Default.parameters?.docs?.source}}}}}]);